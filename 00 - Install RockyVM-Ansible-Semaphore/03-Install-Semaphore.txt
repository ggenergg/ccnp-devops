We will need to install the following:
 - MariaDB (Step 2)
 - Git (Step 3)
 - Semaphore (Step 4)
 - NGINX with SSL (Step 5)

And modify Firewall and SELinux settings (Step 6)

1. Update System
 ~] sudo dnf update -y

2. Install and Configure MariaDB
 ~] curl -LsS -O https://downloads.mariadb.com/MariaDB/mariadb_repo_setup
 ~] sudo bash mariadb_repo_setup

   Install MariaDB Server, Client, and Backup Tools
 ~] sudo dnf -y install MariaDB-server MariaDB-client MariaDB-backup

   Start and Enable MariaDB
 ~] sudo systemctl enable --now mariadb
 ~] sudo systemctl status mariadb

   Secure the MariaDB Installation
 ~] sudo mariadb-secure-installation

   a. Press Enter for no root password.
   b. Unix socket authentication: n
   c. Change root password: y â†’ Set to your preferred password (e.g. C1sc0123 )
   d. Remove anonymous users: y
   e. Disallow root remote login: y
   f. Remove test database: y
   g. Reload privileges: y

   Create Database and User for Semaphore
 ~] mysql -u root -p
  
  *MariaDB Shell
   ]> CREATE DATABASE semaphore;
   ]> GRANT ALL PRIVILEGES ON semaphore.* TO 'semaphore'@'localhost' IDENTIFIED BY 'C1sc0123';
   ]> exit;

3. Install Git
 ~] sudo dnf -y install git
 ~] git --version

4. Install Semaphore
 ~] sudo dnf -y install wget
 ~] wget https://github.com/ansible-semaphore/semaphore/releases/download/v2.13.10/semaphore_2.13.10_linux_amd64.rpm
 ~] sudo dnf -y install semaphore_2.13.10_linux_amd64.rpm

   Create Semaphore User and Run Setup Process
 ~] sudo useradd -m -d /opt/semaphore semaphore
 ~] sudo su - semaphore
 ~] sudo passwd semaphore
 ~] semaphore setup

   a. DB SQL Press ENTER
   b. DB hostname: Press ENTER
   c. DB type: 1 (MySQL)
   d. DB user: semaphore
   e. DB password: C1sc0123
   f. DB name: semaphore
   g. Playbook path: /opt/semaphore
   h. Accept other defaults.
    > Username: admin
    > Email: rivan@gmail.com
        WARN[0175] no rows in result set fields.level=Warn
    > Your name: Rivan
    > Password: C1sc0123

   Create Semaphore Systemd Service
 ~] su root
 ~] sudo nano /etc/systemd/system/semaphore.service

///PASTE

[Unit]
Description=Semaphore Ansible
Documentation=https://github.com/ansible-semaphore/semaphore
Wants=network-online.target
After=network-online.target

[Service]
Type=simple
User=semaphore
Group=semaphore
ExecReload=/bin/kill -HUP $MAINPID
ExecStart=/usr/bin/semaphore service --config=/etc/semaphore/config.json
SyslogIdentifier=semaphore
Restart=always

[Install]
WantedBy=multi-user.target

//

   Configure Semaphore Directory and Start Service
 ~] sudo mkdir /etc/semaphore
 ~] sudo ln -s /opt/semaphore/config.json /etc/semaphore/config.json
 ~] sudo chown -R semaphore:semaphore /etc/semaphore
 ~] sudo systemctl daemon-reload
 ~] sudo systemctl enable --now semaphore
 ~] sudo systemctl status semaphore
 ~] sudo ss -tunelp | grep 3000

5. Install and Configure NGINX with SSL
 ~] sudo nano /etc/yum.repos.d/nginx.repo

///PASTE

[nginx]
name=Nginx Repo
baseurl=https://nginx.org/packages/rhel/$releasever/$basearch/
gpgcheck=0
enabled=1

//

   Install and Start NGINX
 ~] sudo dnf -y install nginx
 ~] sudo systemctl enable --now nginx
 ~] sudo systemctl status nginx

   Generate SSL Certificate
 ~] sudo mkdir /etc/nginx/ssl
 ~] cd /etc/nginx/ssl
 ~] sudo nano ssl-info.txt

///PASTE

[req]
default_bits = 2048
prompt = no
default_keyfile = localhost.key
distinguished_name = dn
req_extensions = req_ext
x509_extensions = v3_ca

[dn]
C = PH
ST = NCR
L = Manila
O = localhost
OU = Development
CN = localhost

[req_ext]
subjectAltName = @alt_names

[v3_ca]
subjectAltName = @alt_names

[alt_names]
DNS.1 = localhost
DNS.2 = 127.0.0.1

//

   Generate Certificate
 ~] sudo openssl req -x509 -nodes -days 3652 -newkey rsa:2048 -keyout localhost.key -out localhost.crt -config ssl-info.txt

   Configure NGINX for Semaphore
 ~] sudo nano /etc/nginx/conf.d/semaphore.conf

///PASTE

upstream semaphore {
server 127.0.0.1:3000;
}
server {
listen 443 ssl http2;
server_name _;
add_header Strict-Transport-Security "max-age=31536000" always;
ssl_certificate /etc/nginx/ssl/localhost.crt;
ssl_certificate_key /etc/nginx/ssl/localhost.key;
ssl_protocols TLSv1.1 TLSv1.2;
ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
ssl_prefer_server_ciphers on;
ssl_session_cache shared:SSL:10m;
chunked_transfer_encoding on;
location / {
proxy_pass http://127.0.0.1:3000/;
proxy_set_header Host $http_host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;
proxy_buffering off;
proxy_request_buffering off;
}
location /api/ws {
proxy_pass http://127.0.0.1:3000/api/ws;
proxy_http_version 1.1;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection "upgrade";
proxy_set_header Origin "";
}
}

//

   Finalize NGINX Configuration
 ~] sudo rm -rf /etc/nginx/conf.d/default.conf
 ~] sudo nginx -t
 ~] sudo systemctl restart nginx

6. Configure Firewall and SELinux
 ~] sudo firewall-cmd --permanent --add-port=443/tcp
 ~] sudo firewall-cmd --permanent --add-port=3000/tcp
 ~] sudo firewall-cmd --reload

   Allow NGINX to Connect to Semaphore (SELinux)
 ~] sudo setsebool -P httpd_can_network_connect 1

Finally, you can access the Semaphore Web GUI
   In Browser: https://[vmIP]:3000
